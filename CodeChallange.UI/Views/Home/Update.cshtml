@model CodeChallange.Entity.User

@section Title
{
    Update User
}
<script src="~/Scripts/UIScripts/Home/update.js"></script>
<script>    
    $(function() {
        $("#update").click(function (e) {

            e.preventDefault();
            var form = $("#updateForm");

            //validate edebilmesi için data attributelerini ayrıştırması lazım.Sebebi json ile load ettik,create ekranında gerek yoktu.
            $.validator.unobtrusive.parse($('#updateForm'));
            form.validate();            

            if (form.valid()) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Update", "Home")",
                    data: form.serialize(),
                    success: function (data) {
                        if (!data.isSuccess) {
                            global.popupAlert();                            
                        } else {
                            global.successAlert();
                            $('#updateModal').modal('hide');
                            global.read();
                        }
                    }
                });
            }

            return false;
        });

    });
</script>

@using (Html.BeginForm("Update", "Home", FormMethod.Post, new { id = "updateForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ID)

    <div class="form-horizontal">                
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" id="update" class="btn btn-default">Update</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
