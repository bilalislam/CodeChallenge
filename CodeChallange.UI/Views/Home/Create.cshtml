
@using CaptchaMvc.HtmlHelpers
@using CaptchaMvc.Interface
@model CodeChallange.Entity.User

@section Title
{
    Create User
}


@{
    ICaptcha captcha = Html.Captcha(5);
}

<script src="~/Scripts/UIScripts/Home/create.js"></script>

<script>
    $(function() {
        $("#create").click(function (e) {

            e.preventDefault();
            var form = $("#createForm");
            form.validate();

            if (form.valid()) {
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Create", "Home")",
                    data: form.serialize(),
                    success: function (data) {
                        if (!data.isSuccess) {
                            global.popupAlert();
                            $('#@captcha.BuildInfo.ImageElementId').attr('src', data.Captcha.@captcha.BuildInfo.ImageElementId);
                            $('#@captcha.BuildInfo.TokenElementId').val(data.Captcha.@captcha.BuildInfo.TokenElementId);
                            $('#@captcha.BuildInfo.InputElementId').val('');
                        } else {
                            global.successAlert();
                            $('#createModal').modal('hide');
                            global.read();
                        }
                    }
                });
            }

            return false;
        });

    });
</script>


@using (Html.BeginForm("Create", "Home", FormMethod.Post, new { id = "createForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="alert alert-danger fade in" id="popup-error-alert" style="display: none">
            <strong>Error!</strong> Invalid Captcha !
        </div>

        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Security Code", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @captcha
            </div>
        </div>

        <div class="modal-footer">
            <button type="button" id="create" class="btn btn-default">Create</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
